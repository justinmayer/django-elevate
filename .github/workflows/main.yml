name: build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test:
    name: Test - Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "pypy3"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Tox
        run: pip install tox tox-gh-actions
      - name: Run Tox
        run: tox
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1


  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox_env: [flake8, docs]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install Tox
        run: pip install tox
      - name: Run tox
        run: tox -e ${{ matrix.tox_env }}


  deploy:
    name: Deploy
    environment: Deployment
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: ${{ github.ref=='refs/heads/main' && github.event_name!='pull_request' }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Check release
        id: check_release
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry githubrelease httpx==0.16.1 autopub
          echo "##[set-output name=release;]$(autopub check)"
      - name: Publish
        if: ${{ steps.check_release.outputs.release=='' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          git remote set-url origin https://$GITHUB_TOKEN@github.com/${{ github.repository }}
          autopub prepare
          poetry build
          autopub commit
          autopub githubrelease
          poetry publish -u __token__ -p $PYPI_PASSWORD
